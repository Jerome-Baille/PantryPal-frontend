// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.elevation-classes();
@include mat.app-background();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-primary: mat.m2-define-palette(mat.$m2-indigo-palette);
$frontend-accent: mat.m2-define-palette(mat.$m2-pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$frontend-warn: mat.m2-define-palette(mat.$m2-red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.m2-define-light-theme((
  color: (
    primary: $frontend-primary,
    accent: $frontend-accent,
    warn: $frontend-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

/* You can add global styles to this file, and also import other style files */

/* Font for the Logo */
@import url('https://fonts.googleapis.com/css2?family=Cookie&display=swap');

/* Font for the title and headers */
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400&display=swap');

/* Font for the text */
@import url('https://fonts.googleapis.com/css2?family=Metrophobic&display=swap');

html, body { height: 100%; }
body { 
  margin: 0; 
  font-family: 'Metrophobic', sans-serif;
  background-color: #FDE7E2;
}

a {
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.main-container {
  padding: 20px 0;
}

@media screen and (max-width: 600px) {
  .main-container {
    padding: 0;
  }
}

.filters-mat-expansion-panel .mat-expansion-panel-body {
  padding: 0 !important;
}

.filters-mat-expansion-panel:not(.mat-expanded) {
  margin: 16px 0;
}

.btn-color-accent {
  background-color: #c56c5c !important;
  color: #fff !important;
}

button, input, textarea, select {
  font-family: 'Metrophobic', sans-serif !important;
}

h1, h2, h3, h4, h5, h6, .mat-mdc-card-title, .card-title {
  font-family: 'Oswald', sans-serif !important;
}

.toolbar__title {
  font-family: 'Cookie', cursive !important;
}

// Updated Snackbar styles
.snackbar-global {
  &.mat-mdc-snack-bar-container {
    margin-top: 60px !important; // Add space below the header
  }
}

.snackbar-success {
  &.mat-mdc-snack-bar-container {
    z-index: 10000 !important;
  }
  
  .mdc-snackbar__surface {
    background-color: #009c0e !important;
    color: white !important;
  }
  
  button {
    color: white !important;
  }
}

.snackbar-error {
  &.mat-mdc-snack-bar-container {
    z-index: 10000 !important;
  }
  
  .mdc-snackbar__surface {
    background-color: #c56c5c !important;
    color: white !important;
  }
  
  button {
    color: white !important;
  }
}

.snackbar-info {
  &.mat-mdc-snack-bar-container {
    z-index: 10000 !important;
  }
  
  .mdc-snackbar__surface {
    background-color: #2196F3 !important;
    color: white !important;
  }
  
  button {
    color: white !important;
  }
}

// Custom dialog styles for sharing users dialog
.sharing-dialog {
  .mat-mdc-dialog-container {
    .mdc-dialog__surface {
      border-radius: 12px;
    }
  }

  mat-dialog-content {
    padding: 16px;
    margin: 0;
  }

  mat-dialog-actions {
    padding: 12px 16px;
    margin: 0;
    background-color: #f8f8f8;
  }
}

// Fullscreen dialog for guided mode - must be above header
.cdk-overlay-container {
  z-index: 10000 !important;
  
  .cdk-global-overlay-wrapper {
    &:has(.fullscreen-dialog) {
      z-index: 10000 !important;
    }
  }
  
  .fullscreen-dialog {
    z-index: 10000 !important;
    
    .cdk-overlay-backdrop {
      display: none;
    }
    
    .cdk-overlay-pane {
      z-index: 10000 !important;
      max-width: 100% !important;
      max-height: 100% !important;
      width: 100%;
      height: 100%;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }
}

// Prevent body scroll when fullscreen dialog is open
body.cdk-global-scrollblock {
  overflow: hidden !important;
  position: fixed;
  width: 100%;
  height: 100%;
}